/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.vianna.aula.trabalhoprincipalclube.view;

import br.edu.vianna.aula.trabalhoprincipalclube.associado.subclass.Associado;
import br.edu.vianna.aula.trabalhoprincipalclube.associado.subclass.Dependente;
import br.edu.vianna.aula.trabalhoprincipalclube.database.connection.dao.DAOAssociado;
import br.edu.vianna.aula.trabalhoprincipalclube.database.connection.dao.DAOContaBar;
import br.edu.vianna.aula.trabalhoprincipalclube.database.connection.dao.DAODependente;
import br.edu.vianna.aula.trabalhoprincipalclube.database.connection.dao.DAOEmpresa;
import br.edu.vianna.aula.trabalhoprincipalclube.database.connection.dao.DAOMensalidade;
import br.edu.vianna.aula.trabalhoprincipalclube.database.connection.dao.DAOUsuario;
import br.edu.vianna.aula.trabalhoprincipalclube.model.subclass.ContaBar;
import br.edu.vianna.aula.trabalhoprincipalclube.model.subclass.Mensalidade;
import br.edu.vianna.aula.trabalhoprincipalclube.operacoes.Empresa;
import br.edu.vianna.aula.trabalhoprincipalclube.usuario.Usuario;
import br.edu.vianna.aula.trabalhoprincipalclube.view.dialog.JDBarVenda;
import br.edu.vianna.aula.trabalhoprincipalclube.view.dialog.JDCadastroAssociados;
import br.edu.vianna.aula.trabalhoprincipalclube.view.dialog.JDCadastroDependentes;
import br.edu.vianna.aula.trabalhoprincipalclube.view.dialog.JDUsuarios;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author suporte
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        Empresa e = new Empresa(1, "JUIZ DE FORA");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMenu = new javax.swing.JPanel();
        jbHome1 = new javax.swing.JButton();
        jbBar = new javax.swing.JButton();
        jbAssociado = new javax.swing.JButton();
        jbUsuario = new javax.swing.JButton();
        jpPrincipal = new javax.swing.JPanel();
        jpHome = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jpRegistro = new javax.swing.JPanel();
        jsNoClube = new javax.swing.JScrollPane();
        jtNoClube = new javax.swing.JTable();
        jbEntrar = new javax.swing.JButton();
        jsFora = new javax.swing.JScrollPane();
        jtFora = new javax.swing.JTable();
        jbSair = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jpAssociado = new javax.swing.JPanel();
        jspAssociado = new javax.swing.JScrollPane();
        jtAssociado = new javax.swing.JTable();
        jbAddAssociado = new javax.swing.JButton();
        jbEditAssociado = new javax.swing.JButton();
        jbRemoveAssociado = new javax.swing.JButton();
        jbRefreshAssociado = new javax.swing.JButton();
        jbAssociadoMais = new javax.swing.JButton();
        jpAssociadoMais = new javax.swing.JPanel();
        jspAssociadoMais = new javax.swing.JScrollPane();
        jtDependentes = new javax.swing.JTable();
        jbAddAssociadoMais = new javax.swing.JButton();
        jbEditAssociadoMais = new javax.swing.JButton();
        jbRemoveAssociadoMais = new javax.swing.JButton();
        jbRefreshAssociadoMais = new javax.swing.JButton();
        jbSairAnimal = new javax.swing.JButton();
        jpAssociadoInfo = new javax.swing.JPanel();
        jlNascEscrever = new javax.swing.JLabel();
        jlNasc = new javax.swing.JLabel();
        jlCPFEscrever = new javax.swing.JLabel();
        jlCPF = new javax.swing.JLabel();
        jlRGEscrever = new javax.swing.JLabel();
        jlTelefoneEscrever = new javax.swing.JLabel();
        jlTelefone = new javax.swing.JLabel();
        jlRG1 = new javax.swing.JLabel();
        jlIDEscrever = new javax.swing.JLabel();
        jlNomeEscrever = new javax.swing.JLabel();
        jpAssociadoInfo2 = new javax.swing.JPanel();
        jlBarValor = new javax.swing.JLabel();
        jlBar = new javax.swing.JLabel();
        jlMensalidadeValor = new javax.swing.JLabel();
        jlMensalidade = new javax.swing.JLabel();
        jlTotalValor = new javax.swing.JLabel();
        jlTotal = new javax.swing.JLabel();
        jbAddAssociadoMais1 = new javax.swing.JButton();
        jpBar = new javax.swing.JPanel();
        jspBarAssociado = new javax.swing.JScrollPane();
        jtBarAssociado = new javax.swing.JTable();
        jbBarVenda = new javax.swing.JButton();
        jpUsuario = new javax.swing.JPanel();
        jspUsuario = new javax.swing.JScrollPane();
        jtUsuario = new javax.swing.JTable();
        jbAddUsuario = new javax.swing.JButton();
        jbEditUsuario = new javax.swing.JButton();
        jbRemoveUsuario = new javax.swing.JButton();
        jbRefreshUsuario = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jbHome1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/house.png"))); // NOI18N
        jbHome1.setToolTipText("Inicio");
        jbHome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbHome1ActionPerformed(evt);
            }
        });

        jbBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bar.png"))); // NOI18N
        jbBar.setToolTipText("Bar");
        jbBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBarActionPerformed(evt);
            }
        });

        jbAssociado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/wrestler64.png"))); // NOI18N
        jbAssociado.setToolTipText("Associados");
        jbAssociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAssociadoActionPerformed(evt);
            }
        });

        jbUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/computer.png"))); // NOI18N
        jbUsuario.setToolTipText("Usuarios");
        jbUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpMenuLayout = new javax.swing.GroupLayout(jpMenu);
        jpMenu.setLayout(jpMenuLayout);
        jpMenuLayout.setHorizontalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbHome1)
                            .addComponent(jbAssociado)
                            .addComponent(jbBar)))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addComponent(jbUsuario)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jpMenuLayout.setVerticalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jbHome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAssociado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbUsuario)
                .addGap(23, 23, 23))
        );

        jpPrincipal.setLayout(new java.awt.CardLayout());

        jpHome.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Zezinho Country Club"));

        jLabel1.setText("Bem Vindo!");

        javax.swing.GroupLayout jpHomeLayout = new javax.swing.GroupLayout(jpHome);
        jpHome.setLayout(jpHomeLayout);
        jpHomeLayout.setHorizontalGroup(
            jpHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHomeLayout.createSequentialGroup()
                .addGap(366, 366, 366)
                .addComponent(jLabel1)
                .addContainerGap(416, Short.MAX_VALUE))
        );
        jpHomeLayout.setVerticalGroup(
            jpHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHomeLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(jLabel1)
                .addContainerGap(407, Short.MAX_VALUE))
        );

        jpPrincipal.add(jpHome, "card3");

        jpRegistro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Entrada de saída de associados"));

        jtNoClube.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsNoClube.setViewportView(jtNoClube);

        jbEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/downloading (3).png"))); // NOI18N
        jbEntrar.setToolTipText("Entrada");
        jbEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEntrarActionPerformed(evt);
            }
        });

        jtFora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsFora.setViewportView(jtFora);

        jbSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/upload.png"))); // NOI18N
        jbSair.setToolTipText("Saida");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        jLabel2.setText("No Clube");

        javax.swing.GroupLayout jpRegistroLayout = new javax.swing.GroupLayout(jpRegistro);
        jpRegistro.setLayout(jpRegistroLayout);
        jpRegistroLayout.setHorizontalGroup(
            jpRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRegistroLayout.createSequentialGroup()
                .addGroup(jpRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jsFora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                    .addComponent(jsNoClube))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbEntrar)
                    .addComponent(jbSair))
                .addGap(8, 8, 8))
            .addGroup(jpRegistroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpRegistroLayout.setVerticalGroup(
            jpRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRegistroLayout.createSequentialGroup()
                .addGroup(jpRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpRegistroLayout.createSequentialGroup()
                        .addGap(0, 210, Short.MAX_VALUE)
                        .addComponent(jbEntrar)
                        .addGap(162, 162, 162))
                    .addGroup(jpRegistroLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jsFora, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addGroup(jpRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpRegistroLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jbSair)
                        .addGap(168, 168, 168))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRegistroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsNoClube, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jpPrincipal.add(jpRegistro, "card2");

        jpAssociado.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Associados"));

        jtAssociado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspAssociado.setViewportView(jtAssociado);

        jbAddAssociado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add (1).png"))); // NOI18N
        jbAddAssociado.setToolTipText("Adicionar");
        jbAddAssociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddAssociadoActionPerformed(evt);
            }
        });

        jbEditAssociado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        jbEditAssociado.setToolTipText("Editar");
        jbEditAssociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditAssociadoActionPerformed(evt);
            }
        });

        jbRemoveAssociado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
        jbRemoveAssociado.setToolTipText("Excluir");
        jbRemoveAssociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoveAssociadoActionPerformed(evt);
            }
        });

        jbRefreshAssociado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        jbRefreshAssociado.setToolTipText("Atualizar");
        jbRefreshAssociado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefreshAssociadoActionPerformed(evt);
            }
        });

        jbAssociadoMais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/personal-information.png"))); // NOI18N
        jbAssociadoMais.setToolTipText("Mais informações");
        jbAssociadoMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAssociadoMaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpAssociadoLayout = new javax.swing.GroupLayout(jpAssociado);
        jpAssociado.setLayout(jpAssociadoLayout);
        jpAssociadoLayout.setHorizontalGroup(
            jpAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoLayout.createSequentialGroup()
                .addComponent(jspAssociado, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbAddAssociado, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jbRemoveAssociado, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jbRefreshAssociado, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jbEditAssociado))
                    .addComponent(jbAssociadoMais)))
        );
        jpAssociadoLayout.setVerticalGroup(
            jpAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoLayout.createSequentialGroup()
                .addGroup(jpAssociadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspAssociado, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addGroup(jpAssociadoLayout.createSequentialGroup()
                        .addComponent(jbAddAssociado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditAssociado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoveAssociado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRefreshAssociado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbAssociadoMais)))
                .addContainerGap())
        );

        jpPrincipal.add(jpAssociado, "card2");

        jpAssociadoMais.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Detalhes"));

        jspAssociadoMais.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dependentes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jtDependentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspAssociadoMais.setViewportView(jtDependentes);

        jbAddAssociadoMais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add (1).png"))); // NOI18N
        jbAddAssociadoMais.setToolTipText("Adicionar");
        jbAddAssociadoMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddAssociadoMaisActionPerformed(evt);
            }
        });

        jbEditAssociadoMais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        jbEditAssociadoMais.setToolTipText("Editar");
        jbEditAssociadoMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditAssociadoMaisActionPerformed(evt);
            }
        });

        jbRemoveAssociadoMais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
        jbRemoveAssociadoMais.setToolTipText("Excluir");
        jbRemoveAssociadoMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoveAssociadoMaisActionPerformed(evt);
            }
        });

        jbRefreshAssociadoMais.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        jbRefreshAssociadoMais.setToolTipText("Atualizar");
        jbRefreshAssociadoMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefreshAssociadoMaisActionPerformed(evt);
            }
        });

        jbSairAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reply (1)24.png"))); // NOI18N
        jbSairAnimal.setToolTipText("Voltar");
        jbSairAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairAnimalActionPerformed(evt);
            }
        });

        jlNascEscrever.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlNascEscrever.setText("087.466.866.22");

        jlNasc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlNasc.setText("Nasc.: ");

        jlCPFEscrever.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlCPFEscrever.setText("087.466.866.22");

        jlCPF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlCPF.setText("CPF:");

        jlRGEscrever.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlRGEscrever.setText("087.466.866.22");

        jlTelefoneEscrever.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlTelefoneEscrever.setText("087.466.866.22");

        jlTelefone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlTelefone.setText("Telefone:");

        jlRG1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlRG1.setText("RG:");

        javax.swing.GroupLayout jpAssociadoInfoLayout = new javax.swing.GroupLayout(jpAssociadoInfo);
        jpAssociadoInfo.setLayout(jpAssociadoInfoLayout);
        jpAssociadoInfoLayout.setHorizontalGroup(
            jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoInfoLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAssociadoInfoLayout.createSequentialGroup()
                        .addComponent(jlTelefone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlTelefoneEscrever))
                    .addGroup(jpAssociadoInfoLayout.createSequentialGroup()
                        .addComponent(jlNasc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlNascEscrever, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpAssociadoInfoLayout.createSequentialGroup()
                        .addComponent(jlRG1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlRGEscrever))
                    .addGroup(jpAssociadoInfoLayout.createSequentialGroup()
                        .addComponent(jlCPF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlCPFEscrever))))
        );
        jpAssociadoInfoLayout.setVerticalGroup(
            jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNasc)
                    .addComponent(jlNascEscrever))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCPF)
                    .addComponent(jlCPFEscrever))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlRG1)
                    .addComponent(jlRGEscrever, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAssociadoInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTelefone)
                    .addComponent(jlTelefoneEscrever))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jlIDEscrever.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jlIDEscrever.setText("C00");

        jlNomeEscrever.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jlNomeEscrever.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlNomeEscrever.setText("RAFAEL");

        jpAssociadoInfo2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pendências"));

        jlBarValor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlBarValor.setText("0.0");

        jlBar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlBar.setText("Bar: R$");

        jlMensalidadeValor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlMensalidadeValor.setText("0.0");

        jlMensalidade.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlMensalidade.setText("Mensalidade: R$");

        jlTotalValor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlTotalValor.setText("0.0");

        jlTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlTotal.setText("Total: R$");

        jbAddAssociadoMais1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/money.png"))); // NOI18N
        jbAddAssociadoMais1.setToolTipText("Adicionar");
        jbAddAssociadoMais1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddAssociadoMais1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpAssociadoInfo2Layout = new javax.swing.GroupLayout(jpAssociadoInfo2);
        jpAssociadoInfo2.setLayout(jpAssociadoInfo2Layout);
        jpAssociadoInfo2Layout.setHorizontalGroup(
            jpAssociadoInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoInfo2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAssociadoInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAssociadoInfo2Layout.createSequentialGroup()
                        .addComponent(jlBar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlBarValor, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpAssociadoInfo2Layout.createSequentialGroup()
                        .addComponent(jlTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlTotalValor))
                    .addGroup(jpAssociadoInfo2Layout.createSequentialGroup()
                        .addComponent(jlMensalidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlMensalidadeValor)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoInfo2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbAddAssociadoMais1)
                .addContainerGap())
        );
        jpAssociadoInfo2Layout.setVerticalGroup(
            jpAssociadoInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoInfo2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAssociadoInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlBar)
                    .addComponent(jlBarValor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAssociadoInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlMensalidade)
                    .addComponent(jlMensalidadeValor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAssociadoInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTotal)
                    .addComponent(jlTotalValor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAddAssociadoMais1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpAssociadoMaisLayout = new javax.swing.GroupLayout(jpAssociadoMais);
        jpAssociadoMais.setLayout(jpAssociadoMaisLayout);
        jpAssociadoMaisLayout.setHorizontalGroup(
            jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAssociadoMaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoMaisLayout.createSequentialGroup()
                        .addGroup(jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpAssociadoMaisLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jlIDEscrever, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlNomeEscrever, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jspAssociadoMais)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpAssociadoMaisLayout.createSequentialGroup()
                                .addComponent(jpAssociadoInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jpAssociadoInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbAddAssociadoMais, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbRemoveAssociadoMais, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbRefreshAssociadoMais, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbEditAssociadoMais))
                        .addGap(8, 8, 8))
                    .addGroup(jpAssociadoMaisLayout.createSequentialGroup()
                        .addGap(801, 801, 801)
                        .addComponent(jbSairAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jpAssociadoMaisLayout.setVerticalGroup(
            jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoMaisLayout.createSequentialGroup()
                .addComponent(jbSairAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoMaisLayout.createSequentialGroup()
                        .addComponent(jpAssociadoInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoMaisLayout.createSequentialGroup()
                        .addGroup(jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlIDEscrever, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNomeEscrever, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpAssociadoInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addGroup(jpAssociadoMaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoMaisLayout.createSequentialGroup()
                        .addComponent(jbAddAssociadoMais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditAssociadoMais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoveAssociadoMais)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRefreshAssociadoMais)
                        .addGap(119, 119, 119))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAssociadoMaisLayout.createSequentialGroup()
                        .addComponent(jspAssociadoMais, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jpPrincipal.add(jpAssociadoMais, "card2");

        jpBar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Bar"));

        jtBarAssociado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspBarAssociado.setViewportView(jtBarAssociado);

        jbBarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pie24.png"))); // NOI18N
        jbBarVenda.setToolTipText("Adicionar");
        jbBarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBarVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBarLayout = new javax.swing.GroupLayout(jpBar);
        jpBar.setLayout(jpBarLayout);
        jpBarLayout.setHorizontalGroup(
            jpBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBarLayout.createSequentialGroup()
                .addComponent(jspBarAssociado, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBarVenda)
                .addGap(8, 8, 8))
        );
        jpBarLayout.setVerticalGroup(
            jpBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBarLayout.createSequentialGroup()
                .addGroup(jpBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspBarAssociado, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addGroup(jpBarLayout.createSequentialGroup()
                        .addComponent(jbBarVenda)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jpPrincipal.add(jpBar, "card2");

        jpUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Usuario"));

        jtUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jspUsuario.setViewportView(jtUsuario);

        jbAddUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add (1).png"))); // NOI18N
        jbAddUsuario.setToolTipText("Adicionar");
        jbAddUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddUsuarioActionPerformed(evt);
            }
        });

        jbEditUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        jbEditUsuario.setToolTipText("Editar");
        jbEditUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditUsuarioActionPerformed(evt);
            }
        });

        jbRemoveUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
        jbRemoveUsuario.setToolTipText("Excluir");
        jbRemoveUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoveUsuarioActionPerformed(evt);
            }
        });

        jbRefreshUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        jbRefreshUsuario.setToolTipText("Atualizar");
        jbRefreshUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefreshUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpUsuarioLayout = new javax.swing.GroupLayout(jpUsuario);
        jpUsuario.setLayout(jpUsuarioLayout);
        jpUsuarioLayout.setHorizontalGroup(
            jpUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUsuarioLayout.createSequentialGroup()
                .addComponent(jspUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAddUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbRemoveUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbRefreshUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbEditUsuario))
                .addGap(8, 8, 8))
        );
        jpUsuarioLayout.setVerticalGroup(
            jpUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUsuarioLayout.createSequentialGroup()
                .addGroup(jpUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addGroup(jpUsuarioLayout.createSequentialGroup()
                        .addComponent(jbAddUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoveUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRefreshUsuario)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jpPrincipal.add(jpUsuario, "card2");

        jMenu1.setText("Trocar Empresa");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Juiz de Fora");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Matias Barbosa");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbAssociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAssociadoActionPerformed
        try{
        jpPrincipal.removeAll();
        jpPrincipal.add(jpAssociado);
        jpPrincipal.repaint();
        jpPrincipal.revalidate();
        
        //----------------------
            
            //-------------BUSCA INICIO-----------
            ArrayList<Associado> lista = new DAOAssociado().buscarTodos();
            
            carregaGridAssociado(lista);          
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        } 
    }//GEN-LAST:event_jbAssociadoActionPerformed

    public void carregaGridAssociado(ArrayList<Associado> lista) {
        String[] nomeColunas = {"ID", "Nome", "Nascimento", "CPF", "RG", "Telefone"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Associado u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getDataNascimento(), u.getCpf(),
                u.getRg(), u.getTelefone()};
            dtm.addRow(values);
        }
        
        jtAssociado.setModel(dtm);
    }
    
//-------------BUSCA FIM-----------
    
    private void jbHome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbHome1ActionPerformed
        try{
            jpPrincipal.removeAll();
            jpPrincipal.add(jpRegistro);
            jpPrincipal.repaint();
            jpPrincipal.revalidate();
        
           //-------------BUSCA INICIO-----------
            ArrayList<Associado> listaDentro = new DAOAssociado().buscarTodosNoClube();
            carregaGridAssociadoNoClube(listaDentro);          
            
            ArrayList<Associado> listaFora = new DAOAssociado().buscarTodosForaDoClube();
            carregaGridAssociadoForaDoClube(listaFora); 
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        } 
        
    }//GEN-LAST:event_jbHome1ActionPerformed
    public void carregaGridAssociadoNoClube(ArrayList<Associado> lista) {
        String[] nomeColunas = {"ID", "Nome", "Nascimento", "CPF", "RG", "Telefone"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Associado u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getDataNascimento(), u.getCpf(),
                u.getRg(), u.getTelefone()};
            dtm.addRow(values);
        }
        
        jtNoClube.setModel(dtm);
    }
    
    public void carregaGridAssociadoForaDoClube(ArrayList<Associado> lista) {
        String[] nomeColunas = {"ID", "Nome", "Nascimento", "CPF", "RG", "Telefone"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Associado u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getDataNascimento(), u.getCpf(),
                u.getRg(), u.getTelefone()};
            dtm.addRow(values);
        }
        
        jtFora.setModel(dtm);
    }

    private void jbBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBarActionPerformed
        try{
        jpPrincipal.removeAll();
        jpPrincipal.add(jpBar);
        jpPrincipal.repaint();
        jpPrincipal.revalidate();
            
        //-------------BUSCA INICIO-----------
        
        ArrayList<Associado> lista = new DAOAssociado().buscarTodos();

        carregaGridAssociadoBar(lista);          
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        } 
    }//GEN-LAST:event_jbBarActionPerformed

    public void carregaGridAssociadoBar(ArrayList<Associado> lista) {
        String[] nomeColunas = {"ID", "Nome", "Nascimento", "CPF", "RG", "Telefone"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Associado u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getDataNascimento(), u.getCpf(),
                u.getRg(), u.getTelefone()};
            dtm.addRow(values);
        }
        
        jtBarAssociado.setModel(dtm);
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        JDViewLogin login = new JDViewLogin(this, true);
        login.setVisible(true);
    }//GEN-LAST:event_formWindowOpened

    private void jbBarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBarVendaActionPerformed
        int linha = jtBarAssociado.getSelectedRow();
        if(linha < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
             int id = (int) jtBarAssociado.getValueAt(linha, 0);
            try {
                Associado ass = new DAOAssociado().buscarPorId(id);
                new JDBarVenda(null,true, ass).show();
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Driver não encontrado.");
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
            }
        }
    }//GEN-LAST:event_jbBarVendaActionPerformed

    private void jbAddUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddUsuarioActionPerformed
        try {
            new JDUsuarios(null,true).show();
            carregaGridUsuarios(new DAOUsuario().buscarTodos());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jbAddUsuarioActionPerformed

    private void jbEditUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditUsuarioActionPerformed
        //ALTERAR
        int linha = jtUsuario.getSelectedRow();
                
        if(linha < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtUsuario.getValueAt(linha, 0);

            try {
                Usuario usu = new DAOUsuario().buscarPorId(id);
                
                JDUsuarios jdc = new JDUsuarios(null,true);
                
                ArrayList<Usuario> lista = new DAOUsuario().buscarTodos();
                
                jdc.alterarRegisto(usu);
                jdc.show();
                
                carregaGridUsuarios(new DAOUsuario().buscarTodos());
                
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Driver não encontrado.");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
            }
        }
    }//GEN-LAST:event_jbEditUsuarioActionPerformed

    private void jbRemoveUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoveUsuarioActionPerformed
        //REMOVER
        int linha = jtUsuario.getSelectedRow();
                
        if(linha < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtUsuario.getValueAt(linha, 0);
            if(JOptionPane.showConfirmDialog(null, "Deseja excluir a entrada selecionada?") == JOptionPane.YES_OPTION){
                
                try {
                    
                    Usuario u = new Usuario();
                    u.setId(id);
                    new DAOUsuario().apagar(u);
                    carregaGridUsuarios(new DAOUsuario().buscarTodos());
                    JOptionPane.showMessageDialog(null, "Registro excluido com sucesso.");
                    
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Driver não encontrado.");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
                }
            }
        }
    }//GEN-LAST:event_jbRemoveUsuarioActionPerformed

    private void jbRefreshUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefreshUsuarioActionPerformed
        try {
            carregaGridUsuarios(new DAOUsuario().buscarTodos());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jbRefreshUsuarioActionPerformed

    private void jbAddAssociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddAssociadoActionPerformed
        try {
            new JDCadastroAssociados(null,true).show();
            carregaGridAssociado(new DAOAssociado().buscarTodos());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jbAddAssociadoActionPerformed

    private void jbEditAssociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditAssociadoActionPerformed
        //ALTERAR
        int linha = jtAssociado.getSelectedRow();
                
        if(linha < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtAssociado.getValueAt(linha, 0);

            try {
                Associado usu = new DAOAssociado().buscarPorId(id);
//                Mensalidade men = new DAOMensalidade().buscarPorIdAssociado(id);
                JDCadastroAssociados jdc = new JDCadastroAssociados(null,true);
                
                ArrayList<Associado> lista = new DAOAssociado().buscarTodos();
                
//                jdc.alterarRegisto(usu, men);
                jdc.alterarRegisto(usu);
                jdc.show();
                
                carregaGridAssociado(new DAOAssociado().buscarTodos());
                
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Driver não encontrado.");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
            }
        }
    }//GEN-LAST:event_jbEditAssociadoActionPerformed

    private void jbRemoveAssociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoveAssociadoActionPerformed
        //REMOVER
        int linha = jtAssociado.getSelectedRow();
                
        if(linha < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtAssociado.getValueAt(linha, 0);
            if(JOptionPane.showConfirmDialog(null, "Deseja excluir a entrada selecionada?") == JOptionPane.YES_OPTION){
                
                try {
                    
                    Associado u = new Associado();
                    u.setId(id);
                    
                    new DAOAssociado().apagar(u);
                    
                    new DAOContaBar().apagarContaBar(u);
                    new DAOMensalidade().apagarMensalidade(u);
                    
                    carregaGridAssociado(new DAOAssociado().buscarTodos());
                    JOptionPane.showMessageDialog(null, "Registro excluido com sucesso.");
                    
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Driver não encontrado.");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
                }
            }
        }
    }//GEN-LAST:event_jbRemoveAssociadoActionPerformed

    private void jbRefreshAssociadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefreshAssociadoActionPerformed
        //ATUALIZAR
        try {
            carregaGridAssociado(new DAOAssociado().buscarTodos());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jbRefreshAssociadoActionPerformed

    private void jbAssociadoMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAssociadoMaisActionPerformed
        
        //QUNDO CLICAR NO BOTAO PRA IR PRO MAIS
        try{
//        jpPrincipal.removeAll();
//        jpPrincipal.add(jpAssociadoMais);
//        jpPrincipal.repaint();
//        jpPrincipal.revalidate();
        
        //----------------------
        //TESTE INICIO
        int linha = jtAssociado.getSelectedRow();
                
        if(linha < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
            
        }else{
            jpPrincipal.removeAll();
            jpPrincipal.add(jpAssociadoMais);
            jpPrincipal.repaint();
            jpPrincipal.revalidate();
        
            int id = (int) jtAssociado.getValueAt(linha, 0);
                
                Associado ass = new DAOAssociado().buscarPorId(id);
                
                jlIDEscrever.setText(String.valueOf(ass.getId()));
                jlCPFEscrever.setText(String.valueOf(ass.getCpf()));
                jlRGEscrever.setText(String.valueOf(ass.getRg()));
                jlNomeEscrever.setText(String.valueOf(ass.getNome()));
                jlTelefoneEscrever.setText(String.valueOf(ass.getTelefone()));
                jlNascEscrever.setText(String.valueOf(ass.getDataNascimento()));
                
                ContaBar conta = new DAOContaBar().buscarPorIDAssociado(id);
                
                Mensalidade mensalidade = new DAOMensalidade().buscarPorIdAssociado(id);
                
                if(mensalidade.isPagamentoPendente()){
                    jlMensalidadeValor.setText(String.valueOf(mensalidade.getValorMensalidade()));
                    jlBarValor.setText(String.valueOf(conta.getValor()));
                }
                
                double total = conta.getValor() + mensalidade.getValorMensalidade();
                jlTotalValor.setText(String.valueOf(conta.getValor() + mensalidade.getValorMensalidade()));
                
                
            
        
            
            //-------------BUSCA INICIO-----------
//            ArrayList<Dependente> lista = new DAODependente().buscarTodos();
              ArrayList<Dependente> lista = new DAODependente().getDependenteAssociado(ass.getId());
            
            carregaGridDependentes(lista);  
            }
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        } 
    }//GEN-LAST:event_jbAssociadoMaisActionPerformed
    
    
    public void carregaGridDependentes(ArrayList<Dependente> lista) {
        String[] nomeColunas = {"ID", "Nome", "Nascimento", "Tipo"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Dependente u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getDataNascimento(), u.getTipo()};
            dtm.addRow(values);
        }
        
        jtDependentes.setModel(dtm);
    }
//-------------BUSCA FIM-----------
    
    public void carregaGridDependenteEspecifico() throws ClassNotFoundException, SQLException {
        int linha = jtAssociado.getSelectedRow();
        int idAss = (int) jtAssociado.getValueAt(linha, 0);
        
        Associado ass = new DAOAssociado().buscarPorId(idAss);
        
        ArrayList<Dependente> lista = new DAODependente().getDependenteAssociado(ass.getId());

        String[] nomeColunas = {"ID", "Nome", "Nascimento", "Tipo"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Dependente u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getDataNascimento(), u.getTipo()};
            dtm.addRow(values);
        }
        
        jtDependentes.setModel(dtm);
    }
    
    
    private void jbUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUsuarioActionPerformed
        jtUsuario.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        try {
            jpPrincipal.removeAll();
            jpPrincipal.add(jpUsuario);
            jpPrincipal.repaint();
            jpPrincipal.revalidate();
            //----------------------
            
            //-------------BUSCA INICIO-----------
            ArrayList<Usuario> lista = new DAOUsuario().buscarTodos();
            
            carregaGridUsuarios(lista);          
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        } 
    }//GEN-LAST:event_jbUsuarioActionPerformed

    public void carregaGridUsuarios(ArrayList<Usuario> lista) {
        String[] nomeColunas = {"ID", "Nome", "Username", "Senha"};
        DefaultTableModel dtm = new DefaultTableModel(nomeColunas, 0);
        
        for (Usuario u : lista) {
            Object[] values = {u.getId(), u.getNome(), u.getUserName(), u.getSenha()};
            dtm.addRow(values);
        }
        
        jtUsuario.setModel(dtm);
    }
    
    private void jbAddAssociadoMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddAssociadoMaisActionPerformed
        try {
            int linha = jtAssociado.getSelectedRow();
            int id = (int) jtAssociado.getValueAt(linha, 0);
            Associado ass = new DAOAssociado().buscarPorId(id);
            
            new JDCadastroDependentes(null, true, ass).show();
            
//            new JDCadastroDependentes(null,true).show();
//            ArrayList<Dependente> lista = new DAODependente().getDependenteAssociado(ass.getId());
            
            carregaGridDependenteEspecifico();
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jbAddAssociadoMaisActionPerformed

    private void jbEditAssociadoMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditAssociadoMaisActionPerformed
        //ALTERAR
        int row = jtDependentes.getSelectedRow();
                
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtDependentes.getValueAt(row, 0);

            try {
                
                Dependente usu = new DAODependente().buscarPorId(id);
                
                JDCadastroDependentes jdc = new JDCadastroDependentes(null, true);
                
//                ArrayList<Associado> lista = new DAOAssociado().buscarTodos();
                
                jdc.alterarRegisto(usu);
                jdc.show();
                
                carregaGridDependenteEspecifico();
                
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Driver não encontrado.");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
            }
        }
    }//GEN-LAST:event_jbEditAssociadoMaisActionPerformed

    private void jbRemoveAssociadoMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoveAssociadoMaisActionPerformed
        //REMOVER
        int row = jtDependentes.getSelectedRow();
                
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtDependentes.getValueAt(row, 0);
            if(JOptionPane.showConfirmDialog(null, "Deseja excluir a entrada selecionada?") == JOptionPane.YES_OPTION){
                
                try {
                    
                    Dependente u = new Dependente();
                    u.setId(id);
                    new DAODependente().apagar(u);
                    
                    carregaGridDependenteEspecifico();
                    
                    JOptionPane.showMessageDialog(null, "Registro excluido com sucesso.");
                    
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Driver não encontrado.");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
                }
            }
        }
    }//GEN-LAST:event_jbRemoveAssociadoMaisActionPerformed

    private void jbRefreshAssociadoMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRefreshAssociadoMaisActionPerformed
        //ATUALIZAR
        try {
//            int linha = jtAssociado.getSelectedRow();
//            int id = (int) jtAssociado.getValueAt(linha, 0);
//            Associado ass = new DAOAssociado().buscarPorId(id);
//            ArrayList<Dependente> lista = new DAODependente().getDependenteAssociado(ass.getId());

            carregaGridDependenteEspecifico();
            
//            carregaGridDependentes(lista); 
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jbRefreshAssociadoMaisActionPerformed

    private void jbSairAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairAnimalActionPerformed
        jpPrincipal.removeAll();
        jpPrincipal.add(jpAssociado);
        jpPrincipal.repaint();
        jpPrincipal.revalidate();
    }//GEN-LAST:event_jbSairAnimalActionPerformed

    private void jbEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEntrarActionPerformed
        int row = jtFora.getSelectedRow();
                
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int idAss = (int) jtFora.getValueAt(row, 0);
                try {
                    
                    Associado u = new Associado();
                    u.setId(idAss);
                    
                    Mensalidade m = new DAOMensalidade().buscarPorIdAssociado(idAss);
//                    Mensalidade m = new Mensalidade();
//                    m.setIdAssociado(idAss);
//                    new DAOMensalidade().verificarPendenciaIDAssociado(idAss);
                    
                    if(m.isPagamentoPendente()){
                        JOptionPane.showMessageDialog(null, "Cadastro com pendencias.");
//                        chamarFichaAssociadoPendente();
                        
                    }else{
                        new DAOAssociado().entrarNoClube(u);

                        ArrayList<Associado> listaDentro = new DAOAssociado().buscarTodosNoClube();
                        carregaGridAssociadoNoClube(listaDentro);          

                        ArrayList<Associado> listaFora = new DAOAssociado().buscarTodosForaDoClube();
                        carregaGridAssociadoForaDoClube(listaFora); 

                        JOptionPane.showMessageDialog(null, "Associado / Dependente liberado para entrar!");
                    }

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Driver não encontrado.");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
                }
        }
    }//GEN-LAST:event_jbEntrarActionPerformed
    private void chamarFichaAssociadoPendente(){
        
        try{
        
            jpPrincipal.removeAll();
            jpPrincipal.add(jpAssociadoMais);
            jpPrincipal.repaint();
            jpPrincipal.revalidate();
        
            int id = (int) jtFora.getValueAt(jtFora.getSelectedRow(), 0);

            Associado ass = new DAOAssociado().buscarPorId(id);

            jlIDEscrever.setText(String.valueOf(ass.getId()));
            jlCPFEscrever.setText(String.valueOf(ass.getCpf()));
            jlRGEscrever.setText(String.valueOf(ass.getRg()));
            jlNomeEscrever.setText(String.valueOf(ass.getNome()));
            jlTelefoneEscrever.setText(String.valueOf(ass.getTelefone()));
            jlNascEscrever.setText(String.valueOf(ass.getDataNascimento()));
                
              ArrayList<Dependente> lista = new DAODependente().getDependenteAssociado(ass.getId());
            
            carregaGridDependentes(lista);  
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        } 
}
    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        int row = jtNoClube.getSelectedRow();
                
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma entrada da lista.");
        }else{
            int id = (int) jtNoClube.getValueAt(row, 0);
                try {
                    
                    Associado u = new Associado();
                    u.setId(id);
                    new DAOAssociado().sairDoClube(u);

                    ArrayList<Associado> listaDentro = new DAOAssociado().buscarTodosNoClube();
                    carregaGridAssociadoNoClube(listaDentro);          

                    ArrayList<Associado> listaFora = new DAOAssociado().buscarTodosForaDoClube();
                    carregaGridAssociadoForaDoClube(listaFora); 

                    JOptionPane.showMessageDialog(null, "Adeus!");

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Driver não encontrado.");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
                }
        }
    }//GEN-LAST:event_jbSairActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Empresa e = new Empresa();
        DAOEmpresa dao = new DAOEmpresa();
        try {
                dao.selecionaJF(e);
                JOptionPane.showMessageDialog(null, "Empresa selecionada: Juiz de Fora");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        Empresa e = new Empresa();
        DAOEmpresa dao = new DAOEmpresa();
        try {
                dao.selecionaMB(e);
                JOptionPane.showMessageDialog(null, "Empresa selecionada: Matias Barbosa");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jbAddAssociadoMais1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddAssociadoMais1ActionPerformed
        
        
        try {
            int idAss = (int) jtAssociado.getValueAt(jtAssociado.getSelectedRow(), 0);
            
            Associado ass = new DAOAssociado().buscarPorId(idAss);
            Mensalidade m = new Mensalidade();
            new DAOMensalidade().pagarMensalidade(m, idAss);
            new DAOContaBar().pagarMensalidade(m, idAss);
            
            JOptionPane.showMessageDialog(null, "Mensalidade está quitada!");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Driver não encontrado.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro na conexão com o banco ou na consulta.");
        }
        
        
        
    }//GEN-LAST:event_jbAddAssociadoMais1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JButton jbAddAssociado;
    private javax.swing.JButton jbAddAssociadoMais;
    private javax.swing.JButton jbAddAssociadoMais1;
    private javax.swing.JButton jbAddUsuario;
    private javax.swing.JButton jbAssociado;
    private javax.swing.JButton jbAssociadoMais;
    private javax.swing.JButton jbBar;
    private javax.swing.JButton jbBarVenda;
    private javax.swing.JButton jbEditAssociado;
    private javax.swing.JButton jbEditAssociadoMais;
    private javax.swing.JButton jbEditUsuario;
    private javax.swing.JButton jbEntrar;
    private javax.swing.JButton jbHome1;
    private javax.swing.JButton jbRefreshAssociado;
    private javax.swing.JButton jbRefreshAssociadoMais;
    private javax.swing.JButton jbRefreshUsuario;
    private javax.swing.JButton jbRemoveAssociado;
    private javax.swing.JButton jbRemoveAssociadoMais;
    private javax.swing.JButton jbRemoveUsuario;
    private javax.swing.JButton jbSair;
    private javax.swing.JButton jbSairAnimal;
    private javax.swing.JButton jbUsuario;
    private javax.swing.JLabel jlBar;
    private javax.swing.JLabel jlBarValor;
    private javax.swing.JLabel jlCPF;
    private javax.swing.JLabel jlCPF1;
    private javax.swing.JLabel jlCPFEscrever;
    private javax.swing.JLabel jlCPFEscrever1;
    private javax.swing.JLabel jlIDEscrever;
    private javax.swing.JLabel jlMensalidade;
    private javax.swing.JLabel jlMensalidadeValor;
    private javax.swing.JLabel jlNasc;
    private javax.swing.JLabel jlNasc1;
    private javax.swing.JLabel jlNascEscrever;
    private javax.swing.JLabel jlNascEscrever1;
    private javax.swing.JLabel jlNomeEscrever;
    private javax.swing.JLabel jlRG1;
    private javax.swing.JLabel jlRG2;
    private javax.swing.JLabel jlRGEscrever;
    private javax.swing.JLabel jlRGEscrever1;
    private javax.swing.JLabel jlTelefone;
    private javax.swing.JLabel jlTelefone1;
    private javax.swing.JLabel jlTelefoneEscrever;
    private javax.swing.JLabel jlTelefoneEscrever1;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JLabel jlTotalValor;
    private javax.swing.JPanel jpAssociado;
    private javax.swing.JPanel jpAssociadoInfo;
    private javax.swing.JPanel jpAssociadoInfo1;
    private javax.swing.JPanel jpAssociadoInfo2;
    private javax.swing.JPanel jpAssociadoMais;
    private javax.swing.JPanel jpBar;
    private javax.swing.JPanel jpHome;
    private javax.swing.JPanel jpMenu;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JPanel jpRegistro;
    private javax.swing.JPanel jpUsuario;
    private javax.swing.JScrollPane jsFora;
    private javax.swing.JScrollPane jsNoClube;
    private javax.swing.JScrollPane jspAssociado;
    private javax.swing.JScrollPane jspAssociadoMais;
    private javax.swing.JScrollPane jspBarAssociado;
    private javax.swing.JScrollPane jspUsuario;
    private javax.swing.JTable jtAssociado;
    private javax.swing.JTable jtBarAssociado;
    private javax.swing.JTable jtDependentes;
    private javax.swing.JTable jtFora;
    private javax.swing.JTable jtNoClube;
    private javax.swing.JTable jtUsuario;
    // End of variables declaration//GEN-END:variables
}
